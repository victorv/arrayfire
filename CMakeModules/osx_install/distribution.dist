<?xml version="1.0" encoding="utf-8" standalone="no"?>
<installer-gui-script minSpecVersion="1">
    <title>${AF_TITLE}</title>
    <welcome    file="${WELCOME_FILE_OUT}" />
    <readme     file="${README_FILE_OUT}" mime-type="test/html" />
    <license    file="${PROJECT_SOURCE_DIR}/LICENSE" mime-type="test/plain" />
    <script>
      function CheckBackendSelected() {
      return choices.opencl_lib.selected ||
            choices.cuda_lib.selected ||
            choices.cpu_lib.selected;
      }
      function CheckBackendOrForgeSelected() {
      return choices.opencl_lib.selected    ||
            choices.cuda_lib.selected       ||
            choices.cpu_lib.selected        ||
            choices.forge_inc.selected      ||
            choices.forge_examples.selected;
      }
      function EnableForgeLibOption() {
      return !(choices.opencl_lib.selected     ||
               choices.cuda_lib.selected       ||
               choices.cpu_lib.selected        ||
               choices.forge_inc.selected);
      }
      function CheckForgeSelected() {
      return choices.forge_lib.selected;
      }
    </script>

    <pkg-ref id="com.arrayfire.arrayfire.cpu.lib"       version="${AF_VERSION}" onConclusion="none">ArrayFireCPU.pkg</pkg-ref>
    <pkg-ref id="com.arrayfire.arrayfire.cuda.lib"      version="${AF_VERSION}" onConclusion="none">ArrayFireCUDA.pkg</pkg-ref>
    <pkg-ref id="com.arrayfire.arrayfire.opencl.lib"    version="${AF_VERSION}" onConclusion="none">ArrayFireOPENCL.pkg</pkg-ref>
    <pkg-ref id="com.arrayfire.arrayfire.unified.lib"   version="${AF_VERSION}" onConclusion="none">ArrayFireUNIFIED.pkg</pkg-ref>
    <pkg-ref id="com.arrayfire.arrayfire.inc"           version="${AF_VERSION}" onConclusion="none">ArrayFireHeaders.pkg</pkg-ref>
    <pkg-ref id="com.arrayfire.arrayfire.examples"      version="${AF_VERSION}" onConclusion="none">ArrayFireExamples.pkg</pkg-ref>
    <pkg-ref id="com.arrayfire.arrayfire.doc"           version="${AF_VERSION}" onConclusion="none">ArrayFireDoc.pkg</pkg-ref>
    <pkg-ref id="com.arrayfire.arrayfire.libcommon"     version="${AF_VERSION}" onConclusion="none">ArrayFireCommon.pkg</pkg-ref>
    <pkg-ref id="com.arrayfire.forge.inc"               version="${AF_VERSION}" onConclusion="none">ForgeHeaders.pkg</pkg-ref>
    <pkg-ref id="com.arrayfire.forge.lib"               version="${AF_VERSION}" onConclusion="none">ForgeLibrary.pkg</pkg-ref>
    <pkg-ref id="com.arrayfire.forge.examples"          version="${AF_VERSION}" onConclusion="none">ForgeExamples.pkg</pkg-ref>
    <pkg-ref id="com.arrayfire.forge.doc"               version="${AF_VERSION}" onConclusion="none">ForgeDoc.pkg</pkg-ref>
    <pkg-ref id="com.arrayfire.forge.cmake"             version="${AF_VERSION}" onConclusion="none">ForgeCMake.pkg</pkg-ref>
    <options customize="always" require-scripts="false"/>
    <choices-outline>
        <line choice="libs">
            <line choice="cpu_lib"/>
            <line choice="cuda_lib"/>
            <line choice="opencl_lib"/>
            <line choice="com.arrayfire.arrayfire.unified.lib"/>
            <line choice="com.arrayfire.arrayfire.libcommon"/>
        </line>
        <line choice="com.arrayfire.arrayfire.inc"/>
        <line choice="com.arrayfire.arrayfire.examples"/>
        <line choice="com.arrayfire.arrayfire.doc"/>
        <line choice="forge">
            <line choice="forge_inc"/>
            <line choice="forge_lib"/>
            <line choice="forge_examples"/>
            <line choice="com.arrayfire.forge.doc"/>
            <line choice="com.arrayfire.forge.cmake"/>
        </line>
    </choices-outline>
    <choice id="libs" title="ArrayFire Libraries" visible="true" enabled="CheckForgeSelected()" />
    <choice title="CPU Libraries"
            description="ArrayFire targeting CPUs. Also installs the corresponding CMake config files."
            id="cpu_lib" visible="true" enabled="true">
        <pkg-ref id="com.arrayfire.arrayfire.cpu.lib"/>
    </choice>
    <choice title="CUDA Libraries"
            description="ArrayFire which targets the CUDA platform. This platform allows you to to take advantage of the CUDA enabled GPUs to run ArrayFire code. Also installs the corresponding CMake config files."
            id="cuda_lib" visible="true" enabled="true">
        <pkg-ref id="com.arrayfire.arrayfire.cuda.lib"/>
    </choice>
    <choice title="OpenCL Libraries"
            description="ArrayFire which targets the OpenCL platform. This platform allows you to use the ArrayFire library which targets OpenCL devices. Also installs the corresponding CMake config files. NOTE: Currently ArrayFire does not support OpenCL for the Intel CPU on Apple."
            id="opencl_lib" visible="true" enabled="true">
        <pkg-ref id="com.arrayfire.arrayfire.opencl.lib"/>
    </choice>
    <choice title="Unified Library"
            description="This library will allow you to choose the platform(cpu, cuda, opencl) at runtime. Also installs the corresponding CMake config files. NOTE: This option requires the other platforms to work properly"
            id="com.arrayfire.arrayfire.unified.lib"
            selected="CheckBackendSelected()"
            visible="true"
            enabled="CheckBackendSelected()">
        <pkg-ref id="com.arrayfire.arrayfire.unified.lib"/>
    </choice>
    <choice title="Library Common"
            description="Installs ArrayFireConfig.cmake files"
            id="com.arrayfire.arrayfire.libcommon"
            selected="CheckBackendSelected()"
            visible="false"
            enabled="CheckBackendSelected()">
        <pkg-ref id="com.arrayfire.arrayfire.libcommon"/>
    </choice>
    <choice title="ArrayFire Headers"
        description="ArrayFire Headers. Installed to /usr/local/include."
        id="com.arrayfire.arrayfire.inc" visible="true" enabled="true">
        <pkg-ref id="com.arrayfire.arrayfire.inc"/>
    </choice>
    <choice title="ArrayFire Examples"
        description="ArrayFire Examples. Installed to /usr/local/share/ArrayFire/examples."
        id="com.arrayfire.arrayfire.examples" visible="true" enabled="true">
        <pkg-ref id="com.arrayfire.arrayfire.examples"/>
    </choice>
    <choice title="ArrayFire Documentation"
        description="ArrayFire Documentation. Installed to /usr/local/share/ArrayFire/doc."
        id="com.arrayfire.arrayfire.doc" visible="true" enabled="true">
        <pkg-ref id="com.arrayfire.arrayfire.doc"/>
    </choice>

    <choice id="forge" title="Forge Installation" visible="true" />
    <choice title="Forge Headers"
        description="Forge Headers Files. Installed to /usr/local/include."
        id="forge_inc" visible="true" enabled="true">
        <pkg-ref id="com.arrayfire.forge.inc"/>
    </choice>
    <choice title="Forge Library"
        description="Installs libforge. Installs to /usr/local/lib/libforge.dylib. This option is required for ArrayFire libs. To unset this, disable ArrayFire Libraries and Forge Headers."
        id="forge_lib"
        selected="CheckBackendOrForgeSelected()"
        visible="true"
        enabled="EnableForgeLibOption()">
        <pkg-ref id="com.arrayfire.forge.lib"/>
    </choice>
    <choice title="Forge Examples"
        description="Forge Examples. Installed to /usr/local/share/Forge/examples."
        id="forge_examples"
        visible="true"
        enabled="true">
        <pkg-ref id="com.arrayfire.forge.examples"/>
    </choice>
    <choice title="Forge Documentation"
        description="Forge Documentation. Installed to /usr/local/share/Forge/doc."
        id="com.arrayfire.forge.doc"
        visible="true"
        enabled="true">
        <pkg-ref id="com.arrayfire.forge.doc"/>
    </choice>
    <choice title="Forge CMake"
            description="Installs ForgeConfig.cmake files"
            id="com.arrayfire.forge.cmake"
            selected="CheckForgeSelected()"
            visible="false"
            enabled="CheckForgeSelected()">
        <pkg-ref id="com.arrayfire.forge.cmake"/>
    </choice>
</installer-gui-script>
